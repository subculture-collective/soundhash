
# Environment Configuration
DATABASE_URL=postgresql://soundhash_user:soundhash_password123@localhost:5432/soundhash
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=soundhash
DATABASE_USER=soundhash_user
DATABASE_PASSWORD=soundhash_password123

# Database Connection Pooling
DATABASE_POOL_SIZE=10                         # Base connection pool size
DATABASE_MAX_OVERFLOW=20                       # Additional connections under load
DATABASE_POOL_TIMEOUT=30                       # Wait time for connection (seconds)
DATABASE_POOL_RECYCLE=3600                     # Recycle connections after 1 hour (seconds)
DATABASE_ECHO=false                            # Enable SQL query logging (true/false)
DATABASE_STATEMENT_TIMEOUT=30000               # Query timeout in milliseconds (30s)

# Redis for Query Result Caching
REDIS_ENABLED=false                            # Enable Redis caching (true/false)
REDIS_HOST=localhost                           # Redis server host
REDIS_PORT=6379                                # Redis server port
REDIS_DB=0                                     # Redis database number
REDIS_PASSWORD=                                # Redis password (optional)
CACHE_TTL_SECONDS=300                          # Default cache TTL (5 minutes)

# API Keys (fill these in)
YOUTUBE_API_KEY=
YOUTUBE_OAUTH_CLIENT_ID=
YOUTUBE_OAUTH_CLIENT_SECRET=
TWITTER_BEARER_TOKEN=
TWITTER_CONSUMER_KEY=
TWITTER_CONSUMER_SECRET=
TWITTER_ACCESS_TOKEN=
TWITTER_ACCESS_TOKEN_SECRET=

REDDIT_CLIENT_ID=
REDDIT_CLIENT_SECRET=
REDDIT_USER_AGENT=soundhash_bot_v1.0
REDDIT_REFRESH_TOKEN=
REDDIT_SUBREDDITS=                           # Comma-separated list of subreddits to monitor (e.g., musicid,tipofmytongue)

# OAuth and Authentication
CALLBACK_BASE_URL=http://localhost:8000
AUTH_SERVER_HOST=0.0.0.0
AUTH_SERVER_PORT=8000

# REST API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_SECRET_KEY=                             # IMPORTANT: Generate a secure key for production (openssl rand -hex 32)
API_ALGORITHM=HS256
API_ACCESS_TOKEN_EXPIRE_MINUTES=30          # Access token lifetime (30 minutes)
API_REFRESH_TOKEN_EXPIRE_DAYS=7             # Refresh token lifetime (7 days)
API_RATE_LIMIT_PER_MINUTE=60                # Rate limit per API key/IP
API_CORS_ORIGINS=http://localhost:3000,http://localhost:8000  # Comma-separated CORS origins
API_TITLE=SoundHash API
API_VERSION=1.0.0
API_DESCRIPTION=Audio fingerprinting and matching API

# Processing Settings
TEMP_DIR=./temp
MAX_CONCURRENT_DOWNLOADS=3
MAX_CONCURRENT_CHANNELS=2
SEGMENT_LENGTH_SECONDS=90
FINGERPRINT_SAMPLE_RATE=22050

# Caching Settings
YT_DLP_CACHE_DIR=./cache/yt-dlp          # Directory for yt-dlp HTTP cache (speeds up re-downloads)
ENABLE_YT_DLP_CACHE=true                  # Enable yt-dlp caching (recommended for faster re-runs)

# Ingestion backoff settings
CHANNEL_RETRY_DELAY=5
CHANNEL_MAX_RETRIES=3

# File management
KEEP_ORIGINAL_AUDIO=true
CLEANUP_SEGMENTS_AFTER_PROCESSING=true

# yt-dlp Download Configuration - YouTube Download Hardening
# See README "YouTube Download Failures / Rate Limiting" section for details

# Proxy configuration (helps with rate limits and geo-restrictions)
USE_PROXY=false
PROXY_URL=                                  # Single proxy: http://proxy.example.com:8080
PROXY_LIST=                                 # List of proxies (format depends on implementation; see README)

# Cookie authentication (recommended for reliability)
YT_COOKIES_FILE=                            # Path to Netscape cookies.txt file exported from browser
YT_COOKIES_FROM_BROWSER=                    # Browser name: chrome, chromium, firefox, brave, edge
YT_BROWSER_PROFILE=                         # Optional: 'Default', 'Profile 1', or Firefox profile name

# Player client override (use if videos appear restricted)
YT_PLAYER_CLIENT=                           # Options: android, ios, web_safari, tv, web_embedded

# Target Channels (comma separated)
TARGET_CHANNELS=

# Bot Settings
BOT_NAME=@soundhash_bot
BOT_KEYWORDS=find clip,source video,original,what song

# Observability Settings
METRICS_ENABLED=true                            # Enable/disable Prometheus metrics collection
METRICS_PORT=9090                               # Port for Prometheus metrics endpoint
HEALTH_CHECK_INTERVAL=300                       # Health check interval in seconds (default: 5 minutes)

# Data Retention and Cleanup Settings
RETENTION_TEMP_FILES_DAYS=7                     # Keep temporary audio files for 7 days
RETENTION_LOG_FILES_DAYS=30                     # Keep log files for 30 days
RETENTION_COMPLETED_JOBS_DAYS=30                # Keep completed processing jobs for 30 days
RETENTION_FAILED_JOBS_DAYS=90                   # Keep failed jobs longer for debugging (90 days)
LOG_DIR=./logs                                  # Directory for log files

# Similarity Search Configuration
# Thresholds for considering a match valid
SIMILARITY_CORRELATION_THRESHOLD=0.70        # Minimum correlation score (0.0-1.0)
SIMILARITY_L2_THRESHOLD=0.70                  # Minimum L2 similarity score (0.0-1.0)
SIMILARITY_MIN_SCORE=0.70                     # Minimum combined similarity score (0.0-1.0)
SIMILARITY_MIN_DURATION=5.0                   # Minimum duration in seconds

# Weights for combining correlation and L2 similarity (must sum to 1.0)
SIMILARITY_CORRELATION_WEIGHT=0.5             # Weight for correlation component
SIMILARITY_L2_WEIGHT=0.5                      # Weight for L2 similarity component

# Alerting Configuration
ALERTING_ENABLED=false                        # Enable/disable alerting system
SLACK_WEBHOOK_URL=                            # Slack incoming webhook URL for alerts
DISCORD_WEBHOOK_URL=                          # Discord webhook URL for alerts

# Alert thresholds (failures within time window trigger alerts)
ALERT_RATE_LIMIT_THRESHOLD=5                  # Number of rate limit errors (429/403) to trigger alert
ALERT_JOB_FAILURE_THRESHOLD=10                # Number of job failures to trigger alert
ALERT_TIME_WINDOW_MINUTES=15                  # Time window in minutes for counting failures

# Backup Configuration
BACKUP_DIR=./backups                          # Local directory for database backups
BACKUP_RETENTION_DAYS=30                      # Keep backups for 30 days
BACKUP_S3_ENABLED=false                       # Enable S3 backup storage (requires boto3)
BACKUP_S3_BUCKET=                             # S3 bucket name for backups (e.g., my-soundhash-backups)
BACKUP_S3_PREFIX=soundhash-backups/           # S3 key prefix for organizing backups

# Email Configuration
EMAIL_ENABLED=false                           # Enable/disable email notifications
EMAIL_PROVIDER=sendgrid                       # Email provider: sendgrid or ses

# SendGrid Configuration
SENDGRID_API_KEY=                             # SendGrid API key
SENDGRID_FROM_EMAIL=noreply@soundhash.io      # From email address
SENDGRID_FROM_NAME=SoundHash                  # From name

# AWS SES Configuration (alternative to SendGrid)
AWS_SES_REGION=us-east-1                      # AWS region for SES
AWS_SES_ACCESS_KEY=                           # AWS access key
AWS_SES_SECRET_KEY=                           # AWS secret key
AWS_SES_FROM_EMAIL=noreply@soundhash.io       # From email address

# Email Templates
EMAIL_TEMPLATES_DIR=./templates/email         # Directory for email templates

# Email Features
EMAIL_TRACK_OPENS=true                        # Track email opens
EMAIL_TRACK_CLICKS=true                       # Track email clicks
EMAIL_UNSUBSCRIBE_URL=http://localhost:8000/api/email/unsubscribe  # Unsubscribe URL

# Digest Email Settings
DIGEST_DAILY_ENABLED=true                     # Enable daily digest emails
DIGEST_DAILY_TIME=09:00                       # Time for daily digest (HH:MM format)
DIGEST_WEEKLY_ENABLED=true                    # Enable weekly digest emails
DIGEST_WEEKLY_DAY=0                           # Day for weekly digest (Monday=0, Sunday=6)
DIGEST_WEEKLY_TIME=09:00                      # Time for weekly digest (HH:MM format)

# ==================== Security Configuration ====================

# Rate Limiting
RATE_LIMITING_ENABLED=true                    # Enable multi-tier rate limiting
API_RATE_LIMIT_PER_HOUR=1000                  # Requests per hour per IP/user
API_RATE_LIMIT_PER_DAY=10000                  # Requests per day per IP/user
API_BURST_SIZE=10                             # Allow burst of requests
SEARCH_RATE_LIMIT_PER_MINUTE=30               # Search endpoint rate limit

# IP Filtering (Allowlist/Blocklist)
IP_FILTERING_ENABLED=false                    # Enable IP allowlist/blocklist
IP_ALLOWLIST=                                 # Comma-separated IPs/networks (e.g., 192.168.1.0/24,10.0.0.1)
IP_BLOCKLIST=                                 # Comma-separated IPs/networks to block

# Threat Detection & WAF
THREAT_DETECTION_ENABLED=true                 # Enable automated threat detection
THREAT_AUTO_BLOCK_THRESHOLD=5                 # Auto-block after N threats detected
FAILED_LOGIN_THRESHOLD=5                      # Failed login attempts before block
FAILED_LOGIN_WINDOW=900                       # Time window for failed logins (seconds)
MAX_HEADER_SIZE=8192                          # Maximum header size (bytes)

# Request Signature Verification
SIGNATURE_VERIFICATION_ENABLED=false          # Enable HMAC signature verification
SIGNATURE_MAX_TIMESTAMP_DELTA=300             # Max time difference for signatures (seconds)

# Security Headers
CSP_ENABLED=true                              # Enable Content Security Policy
CSP_POLICY=default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'
HSTS_ENABLED=true                             # Enable HTTP Strict Transport Security
HSTS_MAX_AGE=31536000                         # HSTS max-age (1 year)
X_FRAME_OPTIONS=DENY                          # X-Frame-Options header
REFERRER_POLICY=strict-origin-when-cross-origin
PERMISSIONS_POLICY=geolocation=(), microphone=(), camera=(), payment=(), usb=()

# API Key Management
API_KEY_ROTATION_DAYS=90                      # Recommend key rotation every N days
API_KEY_DEFAULT_EXPIRY_DAYS=365               # Default API key expiry

# Security Audit Logging
SECURITY_AUDIT_ENABLED=true                   # Enable security event logging
SECURITY_LOG_FILE=./logs/security.log         # Security audit log file

# DDoS Protection (Integration)
DDOS_PROTECTION_PROVIDER=none                 # cloudflare, aws-shield, or none
CLOUDFLARE_ZONE_ID=                           # Cloudflare Zone ID (if using Cloudflare)
CLOUDFLARE_API_TOKEN=                         # Cloudflare API token

# Compliance
COMPLIANCE_MODE=none                          # soc2, iso27001, hipaa, or none
DATA_RETENTION_POLICY_DAYS=365                # Data retention period for compliance

# ==================== Billing & Payments Configuration ====================

# Stripe Configuration (for subscription and payment processing)
STRIPE_SECRET_KEY=                            # Stripe secret key (sk_test_... for test mode)
STRIPE_PUBLISHABLE_KEY=                       # Stripe publishable key (pk_test_... for test mode)
STRIPE_WEBHOOK_SECRET=                        # Stripe webhook signing secret (whsec_...)

# Frontend Configuration
FRONTEND_URL=http://localhost:3000            # Frontend URL for Stripe redirects

# Billing Settings
DEFAULT_TRIAL_DAYS=14                         # Default trial period for paid plans
BILLING_GRACE_PERIOD_DAYS=3                   # Grace period for failed payments

