name: Deploy to Kubernetes Staging

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.short-sha.outputs.sha }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get short SHA
        id: short-sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.production
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:staging
            ghcr.io/${{ github.repository }}:staging-${{ steps.short-sha.outputs.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
      id-token: write  # For AWS OIDC
    environment:
      name: staging
      url: https://staging.soundhash.io
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}
      
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.13.0'
      
      - name: Deploy with Helm
        run: |
          helm upgrade --install soundhash ./helm/soundhash \
            --namespace soundhash-staging \
            --create-namespace \
            --set image.tag=staging-${{ needs.build-and-push.outputs.image_tag }} \
            --values ./helm/soundhash/values-staging.yaml \
            --wait \
            --timeout 10m
      
      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/soundhash-api \
            --namespace soundhash-staging \
            --timeout=5m
      
      - name: Run database migrations
        run: |
          POD_NAME=$(kubectl get pods -n soundhash-staging \
            -l app.kubernetes.io/name=soundhash,component=api \
            -o jsonpath='{.items[0].metadata.name}')
          
          if [ -n "$POD_NAME" ]; then
            kubectl exec -n soundhash-staging ${POD_NAME} -- alembic upgrade head
          fi
        continue-on-error: true
      
      - name: Run smoke tests
        run: |
          # Wait for service to be ready
          sleep 30
          
          # Test health endpoint
          if curl -f https://staging.soundhash.io/health; then
            echo "✅ Health check passed"
          else
            echo "⚠️ Health check failed"
            exit 1
          fi
          
          # Test ready endpoint
          if curl -f https://staging.soundhash.io/health/ready; then
            echo "✅ Readiness check passed"
          else
            echo "⚠️ Readiness check failed"
            exit 1
          fi
        continue-on-error: true
      
      - name: Deployment summary
        if: always()
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** Staging" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image Tag:** staging-${{ needs.build-and-push.outputs.image_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Resources" >> $GITHUB_STEP_SUMMARY
          kubectl get pods,svc,ingress -n soundhash-staging >> $GITHUB_STEP_SUMMARY || true
      
      - name: Notify deployment success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: '✅ Staging deployment completed successfully'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true
      
      - name: Notify deployment failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: '❌ Staging deployment failed'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true
