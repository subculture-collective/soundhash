name: Deploy to Kubernetes Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to deploy (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || inputs.version }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.event.release.tag_name || inputs.version }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
      id-token: write  # For AWS OIDC
    environment:
      name: production
      url: https://api.soundhash.io
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || inputs.version }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}
      
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.13.0'
      
      - name: Deploy with Helm
        run: |
          helm upgrade --install soundhash ./helm/soundhash \
            --namespace soundhash-production \
            --create-namespace \
            --set image.tag=${{ github.event.release.tag_name || inputs.version }} \
            --values ./helm/soundhash/values-production.yaml \
            --wait \
            --timeout 10m \
            --debug
      
      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/soundhash-api \
            --namespace soundhash-production \
            --timeout=5m
      
      - name: Run database migrations
        run: |
          POD_NAME=$(kubectl get pods -n soundhash-production \
            -l app.kubernetes.io/name=soundhash,component=api \
            -o jsonpath='{.items[0].metadata.name}')
          
          if [ -n "$POD_NAME" ]; then
            kubectl exec -n soundhash-production ${POD_NAME} -- alembic upgrade head
          else
            echo "Could not find pod for migrations"
            exit 1
          fi
      
      - name: Health check
        run: |
          for i in {1..10}; do
            if curl -f https://api.soundhash.io/health; then
              echo "Health check passed"
              exit 0
            fi
            echo "Health check failed, retrying... ($i/10)"
            sleep 10
          done
          echo "Health check failed after 10 attempts"
          exit 1
      
      - name: Deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** Production" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ github.event.release.tag_name || inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ needs.build-and-push.outputs.image_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Resources" >> $GITHUB_STEP_SUMMARY
          kubectl get pods,svc,ingress -n soundhash-production >> $GITHUB_STEP_SUMMARY
      
      - name: Notify deployment success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: 'üöÄ Production deployment successful for version ${{ github.event.release.tag_name || inputs.version }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true
      
      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed, rolling back..."
          helm rollback soundhash --namespace soundhash-production
          kubectl rollout status deployment/soundhash-api --namespace soundhash-production
      
      - name: Notify deployment failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: '‚ö†Ô∏è Production deployment failed for version ${{ github.event.release.tag_name || inputs.version }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true
