"""Initial migration with all models

Revision ID: ce1ffb204f19
Revises:
Create Date: 2025-10-18 15:02:35.285224

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ce1ffb204f19"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "channels",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("channel_id", sa.String(length=255), nullable=False),
        sa.Column("channel_name", sa.String(length=500), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("subscriber_count", sa.Integer(), nullable=True),
        sa.Column("video_count", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_processed", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("channel_id"),
    )
    op.create_table(
        "processing_jobs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("job_type", sa.String(length=50), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("target_id", sa.String(length=255), nullable=True),
        sa.Column("parameters", sa.Text(), nullable=True),
        sa.Column("progress", sa.Float(), nullable=True),
        sa.Column("current_step", sa.String(length=200), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=True),
        sa.Column("max_retries", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_processing_jobs_status", "processing_jobs", ["status"], unique=False)
    op.create_index("idx_processing_jobs_type", "processing_jobs", ["job_type"], unique=False)
    op.create_table(
        "videos",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("video_id", sa.String(length=255), nullable=False),
        sa.Column("channel_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=1000), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("duration", sa.Float(), nullable=True),
        sa.Column("view_count", sa.Integer(), nullable=True),
        sa.Column("like_count", sa.Integer(), nullable=True),
        sa.Column("upload_date", sa.DateTime(), nullable=True),
        sa.Column("url", sa.String(length=500), nullable=True),
        sa.Column("thumbnail_url", sa.String(length=500), nullable=True),
        sa.Column("processed", sa.Boolean(), nullable=True),
        sa.Column("processing_started", sa.DateTime(), nullable=True),
        sa.Column("processing_completed", sa.DateTime(), nullable=True),
        sa.Column("processing_error", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channel_id"],
            ["channels.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("video_id"),
    )
    op.create_index("idx_videos_channel_id", "videos", ["channel_id"], unique=False)
    op.create_index("idx_videos_processed", "videos", ["processed"], unique=False)
    op.create_index("idx_videos_video_id", "videos", ["video_id"], unique=False)
    op.create_table(
        "audio_fingerprints",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("video_id", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.Float(), nullable=False),
        sa.Column("end_time", sa.Float(), nullable=False),
        sa.Column("fingerprint_hash", sa.String(length=64), nullable=False),
        sa.Column("fingerprint_data", sa.LargeBinary(), nullable=True),
        sa.Column("sample_rate", sa.Integer(), nullable=True),
        sa.Column("segment_length", sa.Float(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("peak_count", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["video_id"],
            ["videos.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_fingerprints_hash", "audio_fingerprints", ["fingerprint_hash"], unique=False
    )
    op.create_index(
        "idx_fingerprints_time", "audio_fingerprints", ["start_time", "end_time"], unique=False
    )
    op.create_index("idx_fingerprints_video_id", "audio_fingerprints", ["video_id"], unique=False)
    op.create_table(
        "match_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("query_fingerprint_id", sa.Integer(), nullable=True),
        sa.Column("matched_fingerprint_id", sa.Integer(), nullable=True),
        sa.Column("similarity_score", sa.Float(), nullable=False),
        sa.Column("match_confidence", sa.Float(), nullable=True),
        sa.Column("query_source", sa.String(length=50), nullable=True),
        sa.Column("query_url", sa.String(length=1000), nullable=True),
        sa.Column("query_user", sa.String(length=100), nullable=True),
        sa.Column("responded", sa.Boolean(), nullable=True),
        sa.Column("response_sent_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["matched_fingerprint_id"],
            ["audio_fingerprints.id"],
        ),
        sa.ForeignKeyConstraint(
            ["query_fingerprint_id"],
            ["audio_fingerprints.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_match_results_similarity", "match_results", ["similarity_score"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_match_results_similarity", table_name="match_results")
    op.drop_table("match_results")
    op.drop_index("idx_fingerprints_video_id", table_name="audio_fingerprints")
    op.drop_index("idx_fingerprints_time", table_name="audio_fingerprints")
    op.drop_index("idx_fingerprints_hash", table_name="audio_fingerprints")
    op.drop_table("audio_fingerprints")
    op.drop_index("idx_videos_video_id", table_name="videos")
    op.drop_index("idx_videos_processed", table_name="videos")
    op.drop_index("idx_videos_channel_id", table_name="videos")
    op.drop_table("videos")
    op.drop_index("idx_processing_jobs_type", table_name="processing_jobs")
    op.drop_index("idx_processing_jobs_status", table_name="processing_jobs")
    op.drop_table("processing_jobs")
    op.drop_table("channels")
    # ### end Alembic commands ###
