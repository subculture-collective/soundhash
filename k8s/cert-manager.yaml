# cert-manager ClusterIssuer for Let's Encrypt
# Requires cert-manager to be installed: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.0/cert-manager.yaml

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # Production Let's Encrypt server
    server: https://acme-v02.api.letsencrypt.org/directory
    
    # Email for urgent renewal and security notices
    email: admin@soundhash.io  # CHANGE THIS
    
    # Private key secret
    privateKeySecretRef:
      name: letsencrypt-prod
    
    # HTTP01 challenge solver
    solvers:
    - http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # Staging Let's Encrypt server (for testing)
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    
    # Email for urgent renewal and security notices
    email: admin@soundhash.io  # CHANGE THIS
    
    # Private key secret
    privateKeySecretRef:
      name: letsencrypt-staging
    
    # HTTP01 challenge solver
    solvers:
    - http01:
        ingress:
          class: nginx
---
# Certificate resource (optional - can be auto-created by ingress)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: soundhash-tls
  namespace: soundhash-production
spec:
  secretName: soundhash-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - api.soundhash.io
  - "*.soundhash.io"
